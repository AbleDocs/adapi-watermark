# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  tag: '$(Build.BuildId)'

steps:
- task: UseDotNet@2
  displayName: 'Install .net 5.0.x'
  inputs:
    version: '5.0.x'
    includePreviewVersions: false
    performMuliLevelLookup: true

- task: DotNetCoreCLI@2
  displayName: 'Build Watermark Utility'
  inputs:
    command: 'build'
    projects: 'watermark-utility\WatermarkUtility.csproj'
    arguments: '--configuration $(buildConfiguration)'
  condition: succeeded()

- task: DotNetCoreCLI@2
  displayName: 'Run Watermark Utility Tests'
  inputs:
    command: 'test'
    projects: 'watermark-utility-tests\WatermarkUtilityTests.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
  condition: succeeded()

- task: DotNetCoreCLI@2
  displayName: 'Package Watermark Utility'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'watermark-utility\WatermarkUtility.csproj'
    arguments: '--configuration $(BuildConfiguration) --self-contained true --runtime win10-x64 --output $(Build.ArtifactStagingDirectory)/Output'
    zipAfterPublish: true
    modifyOutputPath: true
  condition: succeeded()

- task: PublishBuildArtifacts@1
  displayName: 'Publish Watermark Utility to Pipelines'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/Output'
    artifactName: 'watermark-utility-$(tag)'
  condition: succeeded()
